# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# Microsoft Security DevOps (MSDO) is a command line application which integrates static analysis tools into the development cycle.
# MSDO installs, configures and runs the latest versions of static analysis tools
# (including, but not limited to, SDL/security and compliance tools).
#
# The Microsoft Security DevOps action is currently in beta and runs on the windows-latest queue,
# as well as Windows self hosted agents. ubuntu-latest support coming soon.
#
# For more information about the action , check out https://github.com/microsoft/security-devops-action
#
# Please note this workflow do not integrate your GitHub Org with Microsoft Defender For DevOps. You have to create an integration
# and provide permission before this can report data back to azure.
# Read the official documentation here : https://learn.microsoft.com/en-us/azure/defender-for-cloud/quickstart-onboard-github
name: üß™ CI - Test Only (Local Dev)

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  test:
    runs-on: windows-latest

    steps:
      - name: üìÅ Checkout Code
        uses: actions/checkout@v4

      - name: üîß Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: üì¶ Install Dependencies
        run: npm install

      - name: ‚úÖ Run Tests
        run: npm test

      # ‚úÖ Notification on success
      - name: üìß Notify Success
        if: success()
        run: |
          npm install nodemailer
          node config/send-nodemail.js
        env:
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
          EMAIL_TO: ${{ secrets.EMAIL_TO }}
          EMAIL_SUBJECT: "‚úÖ CI Passed"
          EMAIL_BODY: "Your CI test pipeline passed successfully on branch ${{ github.ref_name }}."

      # ‚ùå Notification on failure
      - name: üìß Notify Failure
        if: failure()
        run: |
          npm install nodemailer
          node config/send-nodemail.js
        env:
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
          EMAIL_TO: ${{ secrets.EMAIL_TO }}
          EMAIL_SUBJECT: "‚ùå CI Failed"
          EMAIL_BODY: "Your CI test pipeline failed on branch ${{ github.ref_name }}. Please check logs."

      # Optional: Microsoft Security DevOps
      - name: üîí Force TLS 1.2+
        shell: pwsh
        run: |
          Add-Content -Path $env:GITHUB_ENV -Value 'NODE_OPTIONS=--tls-min-v1.2'

      - name: üõ°Ô∏è Run Microsoft Security DevOps
        uses: microsoft/security-devops-action@v1.6.0
        env:
          GITHUB_TOKEN: ${{ secrets.MS_TOKEN_GIT }}
          NODE_OPTIONS: --tls-min-v1.2
