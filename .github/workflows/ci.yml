name: CI - Node App

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: 🧾 Checkout Code
        uses: actions/checkout@v3

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 📦 Install Dependencies
        run: npm ci

      - name: ✅ Run Tests
        run: npm test
      - name: 📦 Build Application
        run: npm run build
      - name: 🚀 Deploy Application
        run: npm run deploy
      - name: 📧 Notify on Success
        run: echo "Deployment successful!" | mail -s "Deployment Notification"
      - name: 📧 Notify on Failure
        run: echo "Deployment failed!" | mail -s "Deployment Notification"
      - name: 🧹 Clean Up
        run: npm run clean
      - name: 📄 Generate Documentation
        run: npm run docs
      - name: 📦 Publish Package
        run: npm publish
      - name: 📦 Build Docker Image
        run: docker build -t my-app .
      - name: 🐳 Push Docker Image
        run: docker push my-app:latest
      - name: 📦 Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: ./dist
      - name: 📦 Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
      - name: 📦 Publish to NPM
        run: npm publish
      - name: 📦 Publish to GitHub Packages
        run: npm publish --registry=https://npm.pkg.github.com
      - name: 📦 Publish to Docker Hub
        run: docker push my-dockerhub-username/my-app:latest
      - name: 📦 Publish to AWS ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin my-aws-account-id.dkr.ecr.us-east-1.amazonaws.com
          docker tag my-app:latest my-aws-account-id.dkr.ecr.us-east-1.amazonaws.com/my-app:latest
          docker push my-aws-account-id.dkr.ecr.us-east-1.amazonaws.com/my-app:latest
      - name: 📦 Publish to Azure Container Registry
        run: |
          az acr login --name myacr
          docker tag my-app:latest myacr.azurecr.io/my-app:latest
          docker push myacr.azurecr.io/my-app:latest
      - name: 📦 Publish to Google Container Registry
        run: |
          gcloud auth configure-docker
          docker tag my-app:latest gcr.io/my-gcp-project/my-app:latest
          docker push gcr.io/my-gcp-project/my-app:latest
      - name: 📦 Publish to Heroku
        run: |
          heroku container:login
          docker tag my-app:latest registry.heroku.com/my-heroku-app/web
          docker push registry.heroku.com/my-heroku-app/web
          heroku container:release web --app my-heroku-app
      - name: 📦 Publish to Vercel
        run: |
          vercel login
          vercel --prod
      - name: 📦 Publish to Netlify
        run: |
          netlify login
          netlify deploy --prod
          netlify open
          netlify status
          netlify logs
          netlify open
      - name: 📦 Publish to Firebase Hosting
        run: |
          firebase login
          firebase deploy --prod
          firebase open
          firebase status
          firebase logs
          firebase open
      - name: 📦 Publish to Cloudflare Pages
        run: |
          wrangler login
          wrangler publish
          wrangler open
          wrangler status
          wrangler logs
          wrangler open
      - name: 📦 Publish to GitLab Pages
        run: |
          gitlab-pages deploy
          gitlab-pages open
          gitlab-pages status
          gitlab-pages logs
          gitlab-pages open
      - name: 📦 Publish to Bitbucket Pipelines
        run: |
          bitbucket-pipelines deploy
          bitbucket-pipelines open
          bitbucket-pipelines status
          bitbucket-pipelines logs
          bitbucket-pipelines open
      - name: 📦 Publish to AWS Lambda
        run: |
          aws lambda update-function-code --function-name my-function --zip-file fileb://function.zip
          aws lambda invoke --function-name my-function output.txt
          cat output.txt
      - name: 📦 Publish to Azure Functions
        run: |
          az functionapp deployment source config-zip --name my-function --resource-group my-resource-group --src function.zip
          az functionapp invoke --name my-function --resource-group my-resource-group --output-file output.txt
          cat output.txt
      - name: 📦 Publish to Google Cloud Functions
        run: |
          gcloud functions deploy my-function --runtime nodejs14 --trigger-http --allow-unauthenticated
          gcloud functions call my-function --data '{"key":"value"}'
          gcloud functions logs read my-function
      - name: 📦 Publish to IBM Cloud Functions
        run: |
          ibmcloud fn action update my-function function.zip
          ibmcloud fn action invoke my-function --result
          ibmcloud fn action logs my-function
      - name: 📦 Publish to DigitalOcean App Platform
        run: |
          doctl apps create-deployment my-app
          doctl apps get my-app
          doctl apps logs my-app
      - name: 📦 Publish to Render
        run: |
          render deploy my-app
          render logs my-app
          render open my-app
      - name: 📦 Publish to Railway
        run: |
          railway up
          railway logs
          railway open
      - name: 📦 Publish to Glitch
        run: |
          glitch deploy my-app
          glitch logs my-app
          glitch open my-app
      - name: 📦 Publish to Surge
        run: |
          surge ./dist my-app.surge.sh
          surge open my-app.surge.sh
          surge logs my-app.surge.sh
      - name: 📦 Publish to Zeit Now
        run: |
          now deploy
          now ls
          now logs
          now open  
      - name: 📦 Publish to Cloud Foundry
        run: |
          cf push my-app
          cf apps
          cf logs my-app --recent
          cf open my-app
      - name: 📦 Publish to Dokku
        run: |
          dokku deploy my-app
          dokku logs my-app
          dokku open my-app
          